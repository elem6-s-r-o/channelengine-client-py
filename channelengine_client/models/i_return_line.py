# coding: utf-8

"""
    ChannelEngine Merchant API

    ChannelEngine API for merchants  # noqa: E501

    OpenAPI spec version: 2.17.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IReturnLine(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'return_id': 'int',
        'order_line_id': 'int',
        'merchant_return_line_no': 'str',
        'channel_return_line_no': 'str',
        'merchant_order_line_no': 'str',
        'channel_order_line_no': 'str',
        'quantity': 'int',
        'handling_results': 'list[IReturnLineHandlingResult]',
        'created_at': 'datetime',
        'updated_at': 'datetime',
        'deleted_at': 'datetime',
        'merchant_product_no': 'str',
        'product_name': 'str',
        'product_id': 'int'
    }

    attribute_map = {
        'id': 'Id',
        'return_id': 'ReturnId',
        'order_line_id': 'OrderLineId',
        'merchant_return_line_no': 'MerchantReturnLineNo',
        'channel_return_line_no': 'ChannelReturnLineNo',
        'merchant_order_line_no': 'MerchantOrderLineNo',
        'channel_order_line_no': 'ChannelOrderLineNo',
        'quantity': 'Quantity',
        'handling_results': 'HandlingResults',
        'created_at': 'CreatedAt',
        'updated_at': 'UpdatedAt',
        'deleted_at': 'DeletedAt',
        'merchant_product_no': 'MerchantProductNo',
        'product_name': 'ProductName',
        'product_id': 'ProductId'
    }

    def __init__(self, id=None, return_id=None, order_line_id=None, merchant_return_line_no=None, channel_return_line_no=None, merchant_order_line_no=None, channel_order_line_no=None, quantity=None, handling_results=None, created_at=None, updated_at=None, deleted_at=None, merchant_product_no=None, product_name=None, product_id=None):  # noqa: E501
        """IReturnLine - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._return_id = None
        self._order_line_id = None
        self._merchant_return_line_no = None
        self._channel_return_line_no = None
        self._merchant_order_line_no = None
        self._channel_order_line_no = None
        self._quantity = None
        self._handling_results = None
        self._created_at = None
        self._updated_at = None
        self._deleted_at = None
        self._merchant_product_no = None
        self._product_name = None
        self._product_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if return_id is not None:
            self.return_id = return_id
        if order_line_id is not None:
            self.order_line_id = order_line_id
        if merchant_return_line_no is not None:
            self.merchant_return_line_no = merchant_return_line_no
        if channel_return_line_no is not None:
            self.channel_return_line_no = channel_return_line_no
        if merchant_order_line_no is not None:
            self.merchant_order_line_no = merchant_order_line_no
        if channel_order_line_no is not None:
            self.channel_order_line_no = channel_order_line_no
        if quantity is not None:
            self.quantity = quantity
        if handling_results is not None:
            self.handling_results = handling_results
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
        if deleted_at is not None:
            self.deleted_at = deleted_at
        if merchant_product_no is not None:
            self.merchant_product_no = merchant_product_no
        if product_name is not None:
            self.product_name = product_name
        if product_id is not None:
            self.product_id = product_id

    @property
    def id(self):
        """Gets the id of this IReturnLine.  # noqa: E501


        :return: The id of this IReturnLine.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IReturnLine.


        :param id: The id of this IReturnLine.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def return_id(self):
        """Gets the return_id of this IReturnLine.  # noqa: E501


        :return: The return_id of this IReturnLine.  # noqa: E501
        :rtype: int
        """
        return self._return_id

    @return_id.setter
    def return_id(self, return_id):
        """Sets the return_id of this IReturnLine.


        :param return_id: The return_id of this IReturnLine.  # noqa: E501
        :type: int
        """

        self._return_id = return_id

    @property
    def order_line_id(self):
        """Gets the order_line_id of this IReturnLine.  # noqa: E501


        :return: The order_line_id of this IReturnLine.  # noqa: E501
        :rtype: int
        """
        return self._order_line_id

    @order_line_id.setter
    def order_line_id(self, order_line_id):
        """Sets the order_line_id of this IReturnLine.


        :param order_line_id: The order_line_id of this IReturnLine.  # noqa: E501
        :type: int
        """

        self._order_line_id = order_line_id

    @property
    def merchant_return_line_no(self):
        """Gets the merchant_return_line_no of this IReturnLine.  # noqa: E501


        :return: The merchant_return_line_no of this IReturnLine.  # noqa: E501
        :rtype: str
        """
        return self._merchant_return_line_no

    @merchant_return_line_no.setter
    def merchant_return_line_no(self, merchant_return_line_no):
        """Sets the merchant_return_line_no of this IReturnLine.


        :param merchant_return_line_no: The merchant_return_line_no of this IReturnLine.  # noqa: E501
        :type: str
        """

        self._merchant_return_line_no = merchant_return_line_no

    @property
    def channel_return_line_no(self):
        """Gets the channel_return_line_no of this IReturnLine.  # noqa: E501


        :return: The channel_return_line_no of this IReturnLine.  # noqa: E501
        :rtype: str
        """
        return self._channel_return_line_no

    @channel_return_line_no.setter
    def channel_return_line_no(self, channel_return_line_no):
        """Sets the channel_return_line_no of this IReturnLine.


        :param channel_return_line_no: The channel_return_line_no of this IReturnLine.  # noqa: E501
        :type: str
        """

        self._channel_return_line_no = channel_return_line_no

    @property
    def merchant_order_line_no(self):
        """Gets the merchant_order_line_no of this IReturnLine.  # noqa: E501


        :return: The merchant_order_line_no of this IReturnLine.  # noqa: E501
        :rtype: str
        """
        return self._merchant_order_line_no

    @merchant_order_line_no.setter
    def merchant_order_line_no(self, merchant_order_line_no):
        """Sets the merchant_order_line_no of this IReturnLine.


        :param merchant_order_line_no: The merchant_order_line_no of this IReturnLine.  # noqa: E501
        :type: str
        """

        self._merchant_order_line_no = merchant_order_line_no

    @property
    def channel_order_line_no(self):
        """Gets the channel_order_line_no of this IReturnLine.  # noqa: E501


        :return: The channel_order_line_no of this IReturnLine.  # noqa: E501
        :rtype: str
        """
        return self._channel_order_line_no

    @channel_order_line_no.setter
    def channel_order_line_no(self, channel_order_line_no):
        """Sets the channel_order_line_no of this IReturnLine.


        :param channel_order_line_no: The channel_order_line_no of this IReturnLine.  # noqa: E501
        :type: str
        """

        self._channel_order_line_no = channel_order_line_no

    @property
    def quantity(self):
        """Gets the quantity of this IReturnLine.  # noqa: E501


        :return: The quantity of this IReturnLine.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this IReturnLine.


        :param quantity: The quantity of this IReturnLine.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def handling_results(self):
        """Gets the handling_results of this IReturnLine.  # noqa: E501


        :return: The handling_results of this IReturnLine.  # noqa: E501
        :rtype: list[IReturnLineHandlingResult]
        """
        return self._handling_results

    @handling_results.setter
    def handling_results(self, handling_results):
        """Sets the handling_results of this IReturnLine.


        :param handling_results: The handling_results of this IReturnLine.  # noqa: E501
        :type: list[IReturnLineHandlingResult]
        """

        self._handling_results = handling_results

    @property
    def created_at(self):
        """Gets the created_at of this IReturnLine.  # noqa: E501


        :return: The created_at of this IReturnLine.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this IReturnLine.


        :param created_at: The created_at of this IReturnLine.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this IReturnLine.  # noqa: E501


        :return: The updated_at of this IReturnLine.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this IReturnLine.


        :param updated_at: The updated_at of this IReturnLine.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this IReturnLine.  # noqa: E501


        :return: The deleted_at of this IReturnLine.  # noqa: E501
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this IReturnLine.


        :param deleted_at: The deleted_at of this IReturnLine.  # noqa: E501
        :type: datetime
        """

        self._deleted_at = deleted_at

    @property
    def merchant_product_no(self):
        """Gets the merchant_product_no of this IReturnLine.  # noqa: E501


        :return: The merchant_product_no of this IReturnLine.  # noqa: E501
        :rtype: str
        """
        return self._merchant_product_no

    @merchant_product_no.setter
    def merchant_product_no(self, merchant_product_no):
        """Sets the merchant_product_no of this IReturnLine.


        :param merchant_product_no: The merchant_product_no of this IReturnLine.  # noqa: E501
        :type: str
        """

        self._merchant_product_no = merchant_product_no

    @property
    def product_name(self):
        """Gets the product_name of this IReturnLine.  # noqa: E501


        :return: The product_name of this IReturnLine.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this IReturnLine.


        :param product_name: The product_name of this IReturnLine.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_id(self):
        """Gets the product_id of this IReturnLine.  # noqa: E501


        :return: The product_id of this IReturnLine.  # noqa: E501
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this IReturnLine.


        :param product_id: The product_id of this IReturnLine.  # noqa: E501
        :type: int
        """

        self._product_id = product_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IReturnLine, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IReturnLine):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
