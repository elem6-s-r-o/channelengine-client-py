# coding: utf-8

"""
    ChannelEngine Merchant API

    ChannelEngine API for merchants  # noqa: E501

    OpenAPI spec version: 2.17.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IPurchaseOrderShipmentLineByFilter(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'channel_order_no': 'str',
        'item_sequence_number': 'str',
        'channel_product_no': 'str',
        'merchant_product_no': 'str',
        'quantity_unit_of_measure': 'PurchaseOrderLineUnitOfMeasure',
        'quantity': 'int',
        'quantity_unit_size': 'int',
        'expiry_date': 'datetime'
    }

    attribute_map = {
        'id': 'Id',
        'channel_order_no': 'ChannelOrderNo',
        'item_sequence_number': 'ItemSequenceNumber',
        'channel_product_no': 'ChannelProductNo',
        'merchant_product_no': 'MerchantProductNo',
        'quantity_unit_of_measure': 'QuantityUnitOfMeasure',
        'quantity': 'Quantity',
        'quantity_unit_size': 'QuantityUnitSize',
        'expiry_date': 'ExpiryDate'
    }

    def __init__(self, id=None, channel_order_no=None, item_sequence_number=None, channel_product_no=None, merchant_product_no=None, quantity_unit_of_measure=None, quantity=None, quantity_unit_size=None, expiry_date=None):  # noqa: E501
        """IPurchaseOrderShipmentLineByFilter - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._channel_order_no = None
        self._item_sequence_number = None
        self._channel_product_no = None
        self._merchant_product_no = None
        self._quantity_unit_of_measure = None
        self._quantity = None
        self._quantity_unit_size = None
        self._expiry_date = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if channel_order_no is not None:
            self.channel_order_no = channel_order_no
        if item_sequence_number is not None:
            self.item_sequence_number = item_sequence_number
        if channel_product_no is not None:
            self.channel_product_no = channel_product_no
        if merchant_product_no is not None:
            self.merchant_product_no = merchant_product_no
        if quantity_unit_of_measure is not None:
            self.quantity_unit_of_measure = quantity_unit_of_measure
        if quantity is not None:
            self.quantity = quantity
        if quantity_unit_size is not None:
            self.quantity_unit_size = quantity_unit_size
        if expiry_date is not None:
            self.expiry_date = expiry_date

    @property
    def id(self):
        """Gets the id of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        ChannelEngine identifier of the shipment line  # noqa: E501

        :return: The id of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IPurchaseOrderShipmentLineByFilter.

        ChannelEngine identifier of the shipment line  # noqa: E501

        :param id: The id of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def channel_order_no(self):
        """Gets the channel_order_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        The number the channel uses to identify the purchase order,  which this line (partially) ships.  # noqa: E501

        :return: The channel_order_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: str
        """
        return self._channel_order_no

    @channel_order_no.setter
    def channel_order_no(self, channel_order_no):
        """Sets the channel_order_no of this IPurchaseOrderShipmentLineByFilter.

        The number the channel uses to identify the purchase order,  which this line (partially) ships.  # noqa: E501

        :param channel_order_no: The channel_order_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: str
        """

        self._channel_order_no = channel_order_no

    @property
    def item_sequence_number(self):
        """Gets the item_sequence_number of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        Item sequence number for the item. The first item will be 001, the second 002, and so on.  This number is used as a reference to refer to this item from the carton or pallet level.  # noqa: E501

        :return: The item_sequence_number of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: str
        """
        return self._item_sequence_number

    @item_sequence_number.setter
    def item_sequence_number(self, item_sequence_number):
        """Sets the item_sequence_number of this IPurchaseOrderShipmentLineByFilter.

        Item sequence number for the item. The first item will be 001, the second 002, and so on.  This number is used as a reference to refer to this item from the carton or pallet level.  # noqa: E501

        :param item_sequence_number: The item_sequence_number of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: str
        """

        self._item_sequence_number = item_sequence_number

    @property
    def channel_product_no(self):
        """Gets the channel_product_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        The number the channel uses to identify the product  # noqa: E501

        :return: The channel_product_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: str
        """
        return self._channel_product_no

    @channel_product_no.setter
    def channel_product_no(self, channel_product_no):
        """Sets the channel_product_no of this IPurchaseOrderShipmentLineByFilter.

        The number the channel uses to identify the product  # noqa: E501

        :param channel_product_no: The channel_product_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: str
        """

        self._channel_product_no = channel_product_no

    @property
    def merchant_product_no(self):
        """Gets the merchant_product_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        The number the merchant uses to identify the product  # noqa: E501

        :return: The merchant_product_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: str
        """
        return self._merchant_product_no

    @merchant_product_no.setter
    def merchant_product_no(self, merchant_product_no):
        """Sets the merchant_product_no of this IPurchaseOrderShipmentLineByFilter.

        The number the merchant uses to identify the product  # noqa: E501

        :param merchant_product_no: The merchant_product_no of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: str
        """

        self._merchant_product_no = merchant_product_no

    @property
    def quantity_unit_of_measure(self):
        """Gets the quantity_unit_of_measure of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501


        :return: The quantity_unit_of_measure of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: PurchaseOrderLineUnitOfMeasure
        """
        return self._quantity_unit_of_measure

    @quantity_unit_of_measure.setter
    def quantity_unit_of_measure(self, quantity_unit_of_measure):
        """Sets the quantity_unit_of_measure of this IPurchaseOrderShipmentLineByFilter.


        :param quantity_unit_of_measure: The quantity_unit_of_measure of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: PurchaseOrderLineUnitOfMeasure
        """

        self._quantity_unit_of_measure = quantity_unit_of_measure

    @property
    def quantity(self):
        """Gets the quantity of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        The quantity  # noqa: E501

        :return: The quantity of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this IPurchaseOrderShipmentLineByFilter.

        The quantity  # noqa: E501

        :param quantity: The quantity of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def quantity_unit_size(self):
        """Gets the quantity_unit_size of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        The case size, in the event that we ordered using cases. Otherwise, it is 1.  # noqa: E501

        :return: The quantity_unit_size of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: int
        """
        return self._quantity_unit_size

    @quantity_unit_size.setter
    def quantity_unit_size(self, quantity_unit_size):
        """Sets the quantity_unit_size of this IPurchaseOrderShipmentLineByFilter.

        The case size, in the event that we ordered using cases. Otherwise, it is 1.  # noqa: E501

        :param quantity_unit_size: The quantity_unit_size of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: int
        """

        self._quantity_unit_size = quantity_unit_size

    @property
    def expiry_date(self):
        """Gets the expiry_date of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501

        The date that determines the limit of consumption or use of a product.  For perishable products.  # noqa: E501

        :return: The expiry_date of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :rtype: datetime
        """
        return self._expiry_date

    @expiry_date.setter
    def expiry_date(self, expiry_date):
        """Sets the expiry_date of this IPurchaseOrderShipmentLineByFilter.

        The date that determines the limit of consumption or use of a product.  For perishable products.  # noqa: E501

        :param expiry_date: The expiry_date of this IPurchaseOrderShipmentLineByFilter.  # noqa: E501
        :type: datetime
        """

        self._expiry_date = expiry_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IPurchaseOrderShipmentLineByFilter, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IPurchaseOrderShipmentLineByFilter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
